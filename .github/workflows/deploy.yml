# 建構 VitePress 站點並將其部署到 GitHub Pages 的示範工作流程
#
name: Deploy VitePress site to Pages

on:
  # 在針對 `main` 分支的推送上執行。如果你
  # 使用 `master` 分支作為默认分支，請將其更改為 `master`
  push:
    branches: [main]

  # 允許你從 Actions 選項卡手動執行此工作流程
  workflow_dispatch:

# 設定 GITHUB_TOKEN 的權限，以允許部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允許同時進行一次部署，跳過正在執行和最新隊列之间的執行隊列
# 但是，不要取消正在進行的程序，因為我们希望允許这些生產部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 構建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未啟用 lastUpdated，則不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，請取消注釋
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，請取消注釋
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # npm 或 pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm install # npm 或 pnpm install / yarn install / bun install
      - name: Build with VitePress
        run: npm run docs:build # npm 或 pnpm docs:build / yarn docs:build / bun run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4